{"version":3,"sources":["data.js","Quiz.js","App.js","index.js"],"names":["questions","questionText","answerOptions","answerText","isCorrect","Quiz","useState","ifQuizOver","setIfQuizOver","count","setCount","index","setIndex","checkAnswerHandler","answer","length","console","log","className","key","map","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oLAiDmBA,EAhDA,CACX,CACIC,aAAc,iCACdC,cAAe,CACX,CAAEC,WAAY,WAAYC,WAAW,GACrC,CAAED,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,SAAUC,WAAW,KAG3C,CACIH,aAAc,uBACdC,cAAe,CACX,CAAEC,WAAY,aAAcC,WAAW,GACvC,CAAED,WAAY,YAAaC,WAAW,GACtC,CAAED,WAAY,aAAcC,WAAW,GACvC,CAAED,WAAY,aAAcC,WAAW,KAG/C,CACIH,aAAc,2CACdC,cAAe,CACX,CAAEC,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,YAAaC,WAAW,KAG9C,CACIH,aAAc,yCACdC,cAAe,CACX,CAAEC,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,KAGtC,CACIH,aAAc,gCACdC,cAAe,CACX,CAAEC,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,UAAWC,WAAW,GACpC,CAAED,WAAY,YAAaC,WAAW,GACtC,CAAED,WAAY,QAASC,WAAW,MCqBnCC,MA9Df,WAAiB,IAAD,EAEqBC,oBAAS,GAF9B,mBAERC,EAFQ,KAEIC,EAFJ,OAGWF,mBAAS,GAHpB,mBAGRG,EAHQ,KAGDC,EAHC,OAIWJ,mBAAS,GAJpB,mBAIRK,EAJQ,KAIDC,EAJC,KAOTC,EAAqB,SAACC,EAAQV,GAChCA,GACFM,GAAS,SAAAD,GAAK,OAAIA,EAAQ,KAExBE,IAAUX,EAAUe,OAAS,GAC/BP,GAAc,GAEfI,GAAS,SAAAD,GAAK,OAAIA,EAAQ,MAGxB,OACI,6BAGHK,QAAQC,IAAI,QAASN,GAEvBJ,EACC,yBAAKW,UAAU,iBAAf,cAA2CT,EAA3C,WAA0DT,EAAUe,QAEpE,oCAEGJ,IAASX,EAAUe,OACpB,yBAAKI,IAAKR,GACT,yBAAKO,UAAU,oBACd,yBAAKA,UAAU,kBACd,0CAAgBP,EAAM,GADvB,IACkCX,EAAUe,QAE5C,yBAAKG,UAAU,iBAAiBlB,EAAUW,GAAOV,eAElD,yBAAKiB,UAAU,kBAOblB,EAAUW,GAAOT,cAAckB,KAAI,SAACN,EAAQH,GAC3C,OACC,4BACCU,QAAS,kBAAMR,EAAmBC,EAAOX,WAAWW,EAAOV,aAE1DU,EAAOX,iBAML,QCtDA,SAASmB,IAEvB,OACC,yBAAKJ,UAAU,OACd,kBAAC,EAAD,OCFHK,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACH,EAAD,OAEFI,SAASC,eAAe,U","file":"static/js/main.e1a2c5ee.chunk.js","sourcesContent":["\r\nconst questions =  [\r\n        {\r\n            questionText: 'What is the capital of France?',\r\n            answerOptions: [\r\n                { answerText: 'New York', isCorrect: false },\r\n                { answerText: 'London', isCorrect: false },\r\n                { answerText: 'Paris', isCorrect: true },\r\n                { answerText: 'Dublin', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'Who is CEO of Tesla?',\r\n            answerOptions: [\r\n                { answerText: 'Jeff Bezos', isCorrect: false },\r\n                { answerText: 'Elon Musk', isCorrect: true },\r\n                { answerText: 'Bill Gates', isCorrect: false },\r\n                { answerText: 'Tony Stark', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'The iPhone was created by which company?',\r\n            answerOptions: [\r\n                { answerText: 'Apple', isCorrect: true },\r\n                { answerText: 'Intel', isCorrect: false },\r\n                { answerText: 'Amazon', isCorrect: false },\r\n                { answerText: 'Microsoft', isCorrect: false },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'How many Harry Potter books are there?',\r\n            answerOptions: [\r\n                { answerText: '1', isCorrect: false },\r\n                { answerText: '4', isCorrect: false },\r\n                { answerText: '6', isCorrect: false },\r\n                { answerText: '7', isCorrect: true },\r\n            ],\r\n        },\r\n        {\r\n            questionText: 'What is the capital of India?',\r\n            answerOptions: [\r\n                { answerText: 'Mumbai', isCorrect: false },\r\n                { answerText: 'Kolkata', isCorrect: false },\r\n                { answerText: 'Bangalore', isCorrect: false },\r\n                { answerText: 'Delhi', isCorrect: true },\r\n            ],\r\n        }\r\n    ]\r\n\r\n    export default questions;\r\n    ","import React, {useState} from 'react';\r\nimport questions from './data';\r\n\r\nfunction Quiz() {\r\n\r\n\tconst [ifQuizOver, setIfQuizOver] = useState(false);\r\n\tconst [count, setCount] = useState(0);\r\n\tconst [index, setIndex] = useState(0);\r\n\r\n\r\n\tconst checkAnswerHandler = (answer, isCorrect) => {\r\n\t\tif(isCorrect) {\r\n\t\t\tsetCount(count => count + 1);\r\n\t\t} \r\n\t\tif(index === questions.length - 1) {\r\n\t\t\tsetIfQuizOver(true)\r\n\t\t}\r\n\t\tsetIndex(index => index + 1);\r\n\t}\r\n\r\n    return (\r\n        <div>\r\n            {/* HINT: replace \"false\" with logic to display the \r\n             score when the user has answered all the questions */}\r\n\t\t\t {console.log(\"index\", index)}\r\n\t\t\t{\r\n\t\t\tifQuizOver ? (\r\n\t\t\t\t<div className='score-section'>You scored {count} out of {questions.length}</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t(index!== questions.length) ?\r\n\t\t\t\t\t\t<div key={index}>\r\n\t\t\t\t\t\t\t<div className='question-section'>\r\n\t\t\t\t\t\t\t\t<div className='question-count'>\r\n\t\t\t\t\t\t\t\t\t<span>Question {index+1}</span>/{questions.length}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='question-text'>{questions[index].questionText}</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='answer-section'>\r\n\t\t\t\t\t\t\t\t{/* {\r\n\t\t\t\t\t\t\t\t\tquestion.answerOptions.map((answer, key) => {\r\n\t\t\t\t\t\t\t\t\t\treturn <button key={index}>{answer.answerText}</button>\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t} */}\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tquestions[index].answerOptions.map((answer, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<button \r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => checkAnswerHandler(answer.answerText,answer.isCorrect )}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{answer.answerText}\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div> : null\r\n\t\t\t\t\t}\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Quiz\r\n","import React, { useState } from 'react';\r\nimport Quiz from './Quiz';\r\n\r\nexport default function App() {\r\n\t\r\n\treturn (\r\n\t\t<div className='app'>\r\n\t\t\t<Quiz/>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}